#!/usr/bin/env node

'use strict'

const cluster = require('cluster')
const confus  = require('confus')
const lodash  = require('lodash')
const chalk   = require('chalk')
const util    = require('util')
const http    = require('http')
const os      = require('os')

const app     = require('../server')
const utils   = require('../lib/helpers/utils.js')

confus.at('development', () => {
    spawnWorker()
})

confus.at('production', () => {
    if(cluster.isMaster) { master()  }
    if(cluster.isWorker) { spawnWorker()  }
})

function spawnWorker() {
    const port = app.settings.server.port

    app.server = http.createServer(app)
    app.server.listen(port, () => {
        utils.success(util.format('[+] listening on %d', port))
    })
}

function master() {
    lodash.forEach(os.cpus(), () => {
        cluster.fork()
    })

    cluster.on('fork', (worker) => {
        utils.success('[+] forked worker', worker.id)
    })

    cluster.on('exit', (worker) => {
        utils.success('[-] exited worker', worker.id)
    })
}
